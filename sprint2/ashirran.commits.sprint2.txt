WorkoutApp/Main/urls.py
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   4) from django.shortcuts import render, redirect
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   5) from django.contrib.auth.models import User
8501d430 (Ashirran     2022-10-25 19:17:51 -0400   6) from django.views import generic
8501d430 (Ashirran     2022-10-25 19:17:51 -0400   7) from django.urls import reverse_lazy
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   8) from django.contrib import messages
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   9) from django.contrib.auth import authenticate, login, logout
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  10) from django.contrib.auth.forms import UserChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  11) from telnetlib import LOGOUT, Telnet
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  12) from django import forms
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  13) from django.contrib.auth.views import PasswordChangeView, PasswordChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  15) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  16) class EditProfileForm(UserChangeForm):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  17)     class Meta(UserChangeForm.Meta):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  18)         fields = None
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  19)         exclude = ('groups','is_staff', 'is_active', 'user_permissions', 'is_superuser', 'password', 'last_login')
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  20) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  21) class UserEditView(generic.UpdateView):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  22)     form_class = EditProfileForm
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400  23)     template_name = 'EditProfile.html'
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  24)     success_url = reverse_lazy('home')
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  25)     def get_object(self):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  26)         return self.request.user
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  27) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  28) class PasswordsChangeView(PasswordChangeView):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  29)     form_class = PasswordChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  30)     success_url = reverse_lazy('PasswordSuccess')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  31) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  32) # Create your views here.
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  33) def home(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  34)     return render(request, "homepage.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  35) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  36) def CreateAccount(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  37)     if request.method == "POST":
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  38)         username = request.POST.get('username')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  39)         fname = request.POST.get('fname')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  40)         lname = request.POST.get('lname')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  41)         email = request.POST.get('email')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  42)         password = request.POST.get('password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  43)         confirm_password = request.POST.get('confirm_password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  44) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  45)         if User.objects.filter(username=username):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  46)             messages.error(request, "Username already exists!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  47)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  48) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  49)         if User.objects.filter(email=email):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  50)             messages.error(request, "Email already exists!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  51)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  52)         
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  53)         if len(username)>15:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  54)             messages.error(request, "Username must be under 10 characters.")
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  55)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  56) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  57)         if password != confirm_password:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  58)             messages.error(request, "Passwords do not match.")
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  59)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  60)         if not username.isalnum():
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  61)             messages.error(request, "Username must not contain special characters.")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  62)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  63) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  64)         myuser = User.objects.create_user(username, email, password)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  65)         myuser.first_name = fname
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  66)         myuser.last_name = lname
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  67)         myuser.is_active = True
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  68)         myuser.save() 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  69) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  70)         messages.success(request, "Your Account has been successfully created.")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  72)     return render(request, "CreateAccount.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  73) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  74) def SignIn(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  75)     if request.method == "POST":
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  76)         username = request.POST.get('username')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  77)         password = request.POST.get('password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  78) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  79)         user = authenticate(username=username, password=password)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  80) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  81)         if user is not None:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  82)             login(request, user)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  83)             fname = user.first_name
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  85)             return render(request, "homepage.html", {'fname' : fname})
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  86)         else:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  87)             messages.error(request, "Credentials Are Incorrect")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  88)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  89) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  90)     return render(request, "SignIn.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  91) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  92) def SignOut(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  93)     logout(request)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  94)     messages.success(request, "Logged Out Successfully!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  95)     return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  96) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 130) def CreateCharts(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 131)     pass
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 132) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 133) def ChartHistory(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 134)     pass
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 135) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 136) def MoreInfo(request):
838cc069 (Ashirran     2022-10-25 21:48:28 -0400 137)     return render(request, "MoreInfo.html")
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 151) def password_success(request):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 152)     return render(request, 'PasswordSuccess.html',{})   
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 153) 
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400 154) def EditProfile(request):
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400 155)     return render(request, "EditProfile.html")

WorkoutApp/Main/views.py
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   4) from django.shortcuts import render, redirect
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   5) from django.contrib.auth.models import User
8501d430 (Ashirran     2022-10-25 19:17:51 -0400   6) from django.views import generic
8501d430 (Ashirran     2022-10-25 19:17:51 -0400   7) from django.urls import reverse_lazy
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   8) from django.contrib import messages
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   9) from django.contrib.auth import authenticate, login, logout
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  10) from django.contrib.auth.forms import UserChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  11) from telnetlib import LOGOUT, Telnet
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  12) from django import forms
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  13) from django.contrib.auth.views import PasswordChangeView, PasswordChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  15) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  16) class EditProfileForm(UserChangeForm):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  17)     class Meta(UserChangeForm.Meta):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  18)         fields = None
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  19)         exclude = ('groups','is_staff', 'is_active', 'user_permissions', 'is_superuser', 'password', 'last_login')
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  20) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  21) class UserEditView(generic.UpdateView):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  22)     form_class = EditProfileForm
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400  23)     template_name = 'EditProfile.html'
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  24)     success_url = reverse_lazy('home')
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  25)     def get_object(self):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  26)         return self.request.user
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  27) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  28) class PasswordsChangeView(PasswordChangeView):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  29)     form_class = PasswordChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  30)     success_url = reverse_lazy('PasswordSuccess')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  31) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  32) # Create your views here.
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  33) def home(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  34)     return render(request, "homepage.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  35) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  36) def CreateAccount(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  37)     if request.method == "POST":
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  38)         username = request.POST.get('username')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  39)         fname = request.POST.get('fname')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  40)         lname = request.POST.get('lname')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  41)         email = request.POST.get('email')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  42)         password = request.POST.get('password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  43)         confirm_password = request.POST.get('confirm_password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  44) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  45)         if User.objects.filter(username=username):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  46)             messages.error(request, "Username already exists!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  47)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  48) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  49)         if User.objects.filter(email=email):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  50)             messages.error(request, "Email already exists!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  51)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  52)         
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  53)         if len(username)>15:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  54)             messages.error(request, "Username must be under 10 characters.")
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  55)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  56) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  57)         if password != confirm_password:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  58)             messages.error(request, "Passwords do not match.")
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  59)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  60)         if not username.isalnum():
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  61)             messages.error(request, "Username must not contain special characters.")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  62)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  63) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  64)         myuser = User.objects.create_user(username, email, password)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  65)         myuser.first_name = fname
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  66)         myuser.last_name = lname
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  67)         myuser.is_active = True
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  68)         myuser.save() 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  69) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  70)         messages.success(request, "Your Account has been successfully created.")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  72)     return render(request, "CreateAccount.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  73) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  74) def SignIn(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  75)     if request.method == "POST":
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  76)         username = request.POST.get('username')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  77)         password = request.POST.get('password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  78) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  79)         user = authenticate(username=username, password=password)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  80) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  81)         if user is not None:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  82)             login(request, user)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  83)             fname = user.first_name
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  85)             return render(request, "homepage.html", {'fname' : fname})
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  86)         else:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  87)             messages.error(request, "Credentials Are Incorrect")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  88)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  89) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  90)     return render(request, "SignIn.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  91) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  92) def SignOut(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  93)     logout(request)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  94)     messages.success(request, "Logged Out Successfully!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  95)     return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  96) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 130) def CreateCharts(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 131)     pass
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 132) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 133) def ChartHistory(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 134)     pass
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 135) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 136) def MoreInfo(request):
838cc069 (Ashirran     2022-10-25 21:48:28 -0400 137)     return render(request, "MoreInfo.html")
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 151) def password_success(request):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 152)     return render(request, 'PasswordSuccess.html',{})   
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 153) 
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400 154) def EditProfile(request):
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400 155)     return render(request, "EditProfile.html")

WorkoutApp/Templates/ChangePassword.html
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   4) from django.shortcuts import render, redirect
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   5) from django.contrib.auth.models import User
8501d430 (Ashirran     2022-10-25 19:17:51 -0400   6) from django.views import generic
8501d430 (Ashirran     2022-10-25 19:17:51 -0400   7) from django.urls import reverse_lazy
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   8) from django.contrib import messages
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   9) from django.contrib.auth import authenticate, login, logout
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  10) from django.contrib.auth.forms import UserChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  11) from telnetlib import LOGOUT, Telnet
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  12) from django import forms
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  13) from django.contrib.auth.views import PasswordChangeView, PasswordChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  15) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  16) class EditProfileForm(UserChangeForm):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  17)     class Meta(UserChangeForm.Meta):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  18)         fields = None
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  19)         exclude = ('groups','is_staff', 'is_active', 'user_permissions', 'is_superuser', 'password', 'last_login')
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  20) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  21) class UserEditView(generic.UpdateView):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  22)     form_class = EditProfileForm
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400  23)     template_name = 'EditProfile.html'
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  24)     success_url = reverse_lazy('home')
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  25)     def get_object(self):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  26)         return self.request.user
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  27) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  28) class PasswordsChangeView(PasswordChangeView):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  29)     form_class = PasswordChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  30)     success_url = reverse_lazy('PasswordSuccess')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  31) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  32) # Create your views here.
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  33) def home(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  34)     return render(request, "homepage.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  35) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  36) def CreateAccount(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  37)     if request.method == "POST":
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  38)         username = request.POST.get('username')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  39)         fname = request.POST.get('fname')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  40)         lname = request.POST.get('lname')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  41)         email = request.POST.get('email')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  42)         password = request.POST.get('password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  43)         confirm_password = request.POST.get('confirm_password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  44) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  45)         if User.objects.filter(username=username):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  46)             messages.error(request, "Username already exists!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  47)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  48) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  49)         if User.objects.filter(email=email):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  50)             messages.error(request, "Email already exists!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  51)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  52)         
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  53)         if len(username)>15:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  54)             messages.error(request, "Username must be under 10 characters.")
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  55)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  56) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  57)         if password != confirm_password:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  58)             messages.error(request, "Passwords do not match.")
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  59)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  60)         if not username.isalnum():
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  61)             messages.error(request, "Username must not contain special characters.")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  62)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  63) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  64)         myuser = User.objects.create_user(username, email, password)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  65)         myuser.first_name = fname
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  66)         myuser.last_name = lname
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  67)         myuser.is_active = True
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  68)         myuser.save() 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  69) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  70)         messages.success(request, "Your Account has been successfully created.")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  72)     return render(request, "CreateAccount.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  73) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  74) def SignIn(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  75)     if request.method == "POST":
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  76)         username = request.POST.get('username')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  77)         password = request.POST.get('password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  78) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  79)         user = authenticate(username=username, password=password)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  80) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  81)         if user is not None:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  82)             login(request, user)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  83)             fname = user.first_name
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  85)             return render(request, "homepage.html", {'fname' : fname})
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  86)         else:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  87)             messages.error(request, "Credentials Are Incorrect")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  88)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  89) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  90)     return render(request, "SignIn.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  91) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  92) def SignOut(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  93)     logout(request)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  94)     messages.success(request, "Logged Out Successfully!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  95)     return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  96) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 130) def CreateCharts(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 131)     pass
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 132) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 133) def ChartHistory(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 134)     pass
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 135) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 136) def MoreInfo(request):
838cc069 (Ashirran     2022-10-25 21:48:28 -0400 137)     return render(request, "MoreInfo.html")
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 151) def password_success(request):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 152)     return render(request, 'PasswordSuccess.html',{})   
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 153) 
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400 154) def EditProfile(request):
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400 155)     return render(request, "EditProfile.html")

WorkoutApp/Templates/PasswordSuccess.html
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   4) from django.shortcuts import render, redirect
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   5) from django.contrib.auth.models import User
8501d430 (Ashirran     2022-10-25 19:17:51 -0400   6) from django.views import generic
8501d430 (Ashirran     2022-10-25 19:17:51 -0400   7) from django.urls import reverse_lazy
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   8) from django.contrib import messages
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   9) from django.contrib.auth import authenticate, login, logout
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  10) from django.contrib.auth.forms import UserChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  11) from telnetlib import LOGOUT, Telnet
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  12) from django import forms
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  13) from django.contrib.auth.views import PasswordChangeView, PasswordChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  15) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  16) class EditProfileForm(UserChangeForm):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  17)     class Meta(UserChangeForm.Meta):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  18)         fields = None
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  19)         exclude = ('groups','is_staff', 'is_active', 'user_permissions', 'is_superuser', 'password', 'last_login')
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  20) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  21) class UserEditView(generic.UpdateView):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  22)     form_class = EditProfileForm
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400  23)     template_name = 'EditProfile.html'
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  24)     success_url = reverse_lazy('home')
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  25)     def get_object(self):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  26)         return self.request.user
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  27) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  28) class PasswordsChangeView(PasswordChangeView):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  29)     form_class = PasswordChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  30)     success_url = reverse_lazy('PasswordSuccess')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  31) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  32) # Create your views here.
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  33) def home(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  34)     return render(request, "homepage.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  35) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  36) def CreateAccount(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  37)     if request.method == "POST":
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  38)         username = request.POST.get('username')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  39)         fname = request.POST.get('fname')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  40)         lname = request.POST.get('lname')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  41)         email = request.POST.get('email')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  42)         password = request.POST.get('password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  43)         confirm_password = request.POST.get('confirm_password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  44) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  45)         if User.objects.filter(username=username):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  46)             messages.error(request, "Username already exists!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  47)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  48) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  49)         if User.objects.filter(email=email):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  50)             messages.error(request, "Email already exists!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  51)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  52)         
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  53)         if len(username)>15:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  54)             messages.error(request, "Username must be under 10 characters.")
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  55)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  56) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  57)         if password != confirm_password:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  58)             messages.error(request, "Passwords do not match.")
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  59)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  60)         if not username.isalnum():
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  61)             messages.error(request, "Username must not contain special characters.")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  62)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  63) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  64)         myuser = User.objects.create_user(username, email, password)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  65)         myuser.first_name = fname
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  66)         myuser.last_name = lname
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  67)         myuser.is_active = True
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  68)         myuser.save() 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  69) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  70)         messages.success(request, "Your Account has been successfully created.")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  72)     return render(request, "CreateAccount.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  73) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  74) def SignIn(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  75)     if request.method == "POST":
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  76)         username = request.POST.get('username')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  77)         password = request.POST.get('password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  78) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  79)         user = authenticate(username=username, password=password)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  80) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  81)         if user is not None:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  82)             login(request, user)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  83)             fname = user.first_name
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  85)             return render(request, "homepage.html", {'fname' : fname})
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  86)         else:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  87)             messages.error(request, "Credentials Are Incorrect")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  88)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  89) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  90)     return render(request, "SignIn.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  91) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  92) def SignOut(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  93)     logout(request)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  94)     messages.success(request, "Logged Out Successfully!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  95)     return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  96) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 130) def CreateCharts(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 131)     pass
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 132) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 133) def ChartHistory(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 134)     pass
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 135) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 136) def MoreInfo(request):
838cc069 (Ashirran     2022-10-25 21:48:28 -0400 137)     return render(request, "MoreInfo.html")
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 151) def password_success(request):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 152)     return render(request, 'PasswordSuccess.html',{})   
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 153) 
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400 154) def EditProfile(request):
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400 155)     return render(request, "EditProfile.html")

WorkoutApp/Templates/ProfilePage.html
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   4) from django.shortcuts import render, redirect
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   5) from django.contrib.auth.models import User
8501d430 (Ashirran     2022-10-25 19:17:51 -0400   6) from django.views import generic
8501d430 (Ashirran     2022-10-25 19:17:51 -0400   7) from django.urls import reverse_lazy
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   8) from django.contrib import messages
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   9) from django.contrib.auth import authenticate, login, logout
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  10) from django.contrib.auth.forms import UserChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  11) from telnetlib import LOGOUT, Telnet
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  12) from django import forms
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  13) from django.contrib.auth.views import PasswordChangeView, PasswordChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  15) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  16) class EditProfileForm(UserChangeForm):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  17)     class Meta(UserChangeForm.Meta):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  18)         fields = None
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  19)         exclude = ('groups','is_staff', 'is_active', 'user_permissions', 'is_superuser', 'password', 'last_login')
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  20) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  21) class UserEditView(generic.UpdateView):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  22)     form_class = EditProfileForm
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400  23)     template_name = 'EditProfile.html'
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  24)     success_url = reverse_lazy('home')
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  25)     def get_object(self):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  26)         return self.request.user
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  27) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  28) class PasswordsChangeView(PasswordChangeView):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  29)     form_class = PasswordChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  30)     success_url = reverse_lazy('PasswordSuccess')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  31) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  32) # Create your views here.
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  33) def home(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  34)     return render(request, "homepage.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  35) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  36) def CreateAccount(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  37)     if request.method == "POST":
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  38)         username = request.POST.get('username')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  39)         fname = request.POST.get('fname')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  40)         lname = request.POST.get('lname')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  41)         email = request.POST.get('email')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  42)         password = request.POST.get('password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  43)         confirm_password = request.POST.get('confirm_password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  44) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  45)         if User.objects.filter(username=username):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  46)             messages.error(request, "Username already exists!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  47)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  48) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  49)         if User.objects.filter(email=email):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  50)             messages.error(request, "Email already exists!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  51)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  52)         
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  53)         if len(username)>15:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  54)             messages.error(request, "Username must be under 10 characters.")
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  55)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  56) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  57)         if password != confirm_password:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  58)             messages.error(request, "Passwords do not match.")
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  59)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  60)         if not username.isalnum():
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  61)             messages.error(request, "Username must not contain special characters.")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  62)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  63) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  64)         myuser = User.objects.create_user(username, email, password)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  65)         myuser.first_name = fname
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  66)         myuser.last_name = lname
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  67)         myuser.is_active = True
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  68)         myuser.save() 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  69) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  70)         messages.success(request, "Your Account has been successfully created.")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  72)     return render(request, "CreateAccount.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  73) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  74) def SignIn(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  75)     if request.method == "POST":
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  76)         username = request.POST.get('username')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  77)         password = request.POST.get('password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  78) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  79)         user = authenticate(username=username, password=password)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  80) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  81)         if user is not None:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  82)             login(request, user)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  83)             fname = user.first_name
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  85)             return render(request, "homepage.html", {'fname' : fname})
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  86)         else:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  87)             messages.error(request, "Credentials Are Incorrect")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  88)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  89) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  90)     return render(request, "SignIn.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  91) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  92) def SignOut(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  93)     logout(request)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  94)     messages.success(request, "Logged Out Successfully!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  95)     return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  96) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 130) def CreateCharts(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 131)     pass
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 132) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 133) def ChartHistory(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 134)     pass
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 135) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 136) def MoreInfo(request):
838cc069 (Ashirran     2022-10-25 21:48:28 -0400 137)     return render(request, "MoreInfo.html")
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 151) def password_success(request):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 152)     return render(request, 'PasswordSuccess.html',{})   
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 153) 
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400 154) def EditProfile(request):
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400 155)     return render(request, "EditProfile.html")

WorkoutApp/Templates/homepage.html
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   4) from django.shortcuts import render, redirect
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   5) from django.contrib.auth.models import User
8501d430 (Ashirran     2022-10-25 19:17:51 -0400   6) from django.views import generic
8501d430 (Ashirran     2022-10-25 19:17:51 -0400   7) from django.urls import reverse_lazy
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   8) from django.contrib import messages
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   9) from django.contrib.auth import authenticate, login, logout
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  10) from django.contrib.auth.forms import UserChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  11) from telnetlib import LOGOUT, Telnet
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  12) from django import forms
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  13) from django.contrib.auth.views import PasswordChangeView, PasswordChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  15) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  16) class EditProfileForm(UserChangeForm):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  17)     class Meta(UserChangeForm.Meta):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  18)         fields = None
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  19)         exclude = ('groups','is_staff', 'is_active', 'user_permissions', 'is_superuser', 'password', 'last_login')
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  20) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  21) class UserEditView(generic.UpdateView):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  22)     form_class = EditProfileForm
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400  23)     template_name = 'EditProfile.html'
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  24)     success_url = reverse_lazy('home')
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  25)     def get_object(self):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  26)         return self.request.user
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  27) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  28) class PasswordsChangeView(PasswordChangeView):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  29)     form_class = PasswordChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  30)     success_url = reverse_lazy('PasswordSuccess')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  31) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  32) # Create your views here.
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  33) def home(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  34)     return render(request, "homepage.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  35) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  36) def CreateAccount(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  37)     if request.method == "POST":
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  38)         username = request.POST.get('username')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  39)         fname = request.POST.get('fname')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  40)         lname = request.POST.get('lname')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  41)         email = request.POST.get('email')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  42)         password = request.POST.get('password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  43)         confirm_password = request.POST.get('confirm_password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  44) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  45)         if User.objects.filter(username=username):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  46)             messages.error(request, "Username already exists!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  47)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  48) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  49)         if User.objects.filter(email=email):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  50)             messages.error(request, "Email already exists!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  51)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  52)         
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  53)         if len(username)>15:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  54)             messages.error(request, "Username must be under 10 characters.")
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  55)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  56) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  57)         if password != confirm_password:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  58)             messages.error(request, "Passwords do not match.")
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  59)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  60)         if not username.isalnum():
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  61)             messages.error(request, "Username must not contain special characters.")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  62)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  63) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  64)         myuser = User.objects.create_user(username, email, password)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  65)         myuser.first_name = fname
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  66)         myuser.last_name = lname
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  67)         myuser.is_active = True
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  68)         myuser.save() 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  69) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  70)         messages.success(request, "Your Account has been successfully created.")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  72)     return render(request, "CreateAccount.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  73) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  74) def SignIn(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  75)     if request.method == "POST":
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  76)         username = request.POST.get('username')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  77)         password = request.POST.get('password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  78) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  79)         user = authenticate(username=username, password=password)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  80) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  81)         if user is not None:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  82)             login(request, user)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  83)             fname = user.first_name
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  85)             return render(request, "homepage.html", {'fname' : fname})
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  86)         else:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  87)             messages.error(request, "Credentials Are Incorrect")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  88)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  89) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  90)     return render(request, "SignIn.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  91) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  92) def SignOut(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  93)     logout(request)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  94)     messages.success(request, "Logged Out Successfully!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  95)     return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  96) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 130) def CreateCharts(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 131)     pass
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 132) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 133) def ChartHistory(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 134)     pass
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 135) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 136) def MoreInfo(request):
838cc069 (Ashirran     2022-10-25 21:48:28 -0400 137)     return render(request, "MoreInfo.html")
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 151) def password_success(request):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 152)     return render(request, 'PasswordSuccess.html',{})   
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 153) 
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400 154) def EditProfile(request):
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400 155)     return render(request, "EditProfile.html")

WorkoutApp/Templates/CreateWorkout.html
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   4) from django.shortcuts import render, redirect
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   5) from django.contrib.auth.models import User
8501d430 (Ashirran     2022-10-25 19:17:51 -0400   6) from django.views import generic
8501d430 (Ashirran     2022-10-25 19:17:51 -0400   7) from django.urls import reverse_lazy
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   8) from django.contrib import messages
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   9) from django.contrib.auth import authenticate, login, logout
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  10) from django.contrib.auth.forms import UserChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  11) from telnetlib import LOGOUT, Telnet
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  12) from django import forms
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  13) from django.contrib.auth.views import PasswordChangeView, PasswordChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  15) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  16) class EditProfileForm(UserChangeForm):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  17)     class Meta(UserChangeForm.Meta):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  18)         fields = None
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  19)         exclude = ('groups','is_staff', 'is_active', 'user_permissions', 'is_superuser', 'password', 'last_login')
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  20) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  21) class UserEditView(generic.UpdateView):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  22)     form_class = EditProfileForm
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400  23)     template_name = 'EditProfile.html'
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  24)     success_url = reverse_lazy('home')
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  25)     def get_object(self):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  26)         return self.request.user
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  27) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  28) class PasswordsChangeView(PasswordChangeView):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  29)     form_class = PasswordChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  30)     success_url = reverse_lazy('PasswordSuccess')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  31) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  32) # Create your views here.
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  33) def home(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  34)     return render(request, "homepage.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  35) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  36) def CreateAccount(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  37)     if request.method == "POST":
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  38)         username = request.POST.get('username')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  39)         fname = request.POST.get('fname')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  40)         lname = request.POST.get('lname')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  41)         email = request.POST.get('email')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  42)         password = request.POST.get('password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  43)         confirm_password = request.POST.get('confirm_password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  44) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  45)         if User.objects.filter(username=username):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  46)             messages.error(request, "Username already exists!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  47)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  48) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  49)         if User.objects.filter(email=email):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  50)             messages.error(request, "Email already exists!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  51)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  52)         
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  53)         if len(username)>15:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  54)             messages.error(request, "Username must be under 10 characters.")
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  55)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  56) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  57)         if password != confirm_password:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  58)             messages.error(request, "Passwords do not match.")
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  59)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  60)         if not username.isalnum():
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  61)             messages.error(request, "Username must not contain special characters.")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  62)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  63) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  64)         myuser = User.objects.create_user(username, email, password)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  65)         myuser.first_name = fname
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  66)         myuser.last_name = lname
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  67)         myuser.is_active = True
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  68)         myuser.save() 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  69) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  70)         messages.success(request, "Your Account has been successfully created.")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  72)     return render(request, "CreateAccount.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  73) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  74) def SignIn(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  75)     if request.method == "POST":
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  76)         username = request.POST.get('username')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  77)         password = request.POST.get('password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  78) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  79)         user = authenticate(username=username, password=password)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  80) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  81)         if user is not None:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  82)             login(request, user)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  83)             fname = user.first_name
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  85)             return render(request, "homepage.html", {'fname' : fname})
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  86)         else:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  87)             messages.error(request, "Credentials Are Incorrect")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  88)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  89) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  90)     return render(request, "SignIn.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  91) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  92) def SignOut(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  93)     logout(request)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  94)     messages.success(request, "Logged Out Successfully!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  95)     return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  96) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 130) def CreateCharts(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 131)     pass
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 132) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 133) def ChartHistory(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 134)     pass
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 135) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 136) def MoreInfo(request):
838cc069 (Ashirran     2022-10-25 21:48:28 -0400 137)     return render(request, "MoreInfo.html")
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 151) def password_success(request):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 152)     return render(request, 'PasswordSuccess.html',{})   
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 153) 
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400 154) def EditProfile(request):
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400 155)     return render(request, "EditProfile.html")


WorkoutApp/Templates/MoreInfo.html
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   4) from django.shortcuts import render, redirect
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   5) from django.contrib.auth.models import User
8501d430 (Ashirran     2022-10-25 19:17:51 -0400   6) from django.views import generic
8501d430 (Ashirran     2022-10-25 19:17:51 -0400   7) from django.urls import reverse_lazy
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   8) from django.contrib import messages
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   9) from django.contrib.auth import authenticate, login, logout
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  10) from django.contrib.auth.forms import UserChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  11) from telnetlib import LOGOUT, Telnet
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  12) from django import forms
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  13) from django.contrib.auth.views import PasswordChangeView, PasswordChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  15) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  16) class EditProfileForm(UserChangeForm):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  17)     class Meta(UserChangeForm.Meta):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  18)         fields = None
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  19)         exclude = ('groups','is_staff', 'is_active', 'user_permissions', 'is_superuser', 'password', 'last_login')
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  20) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  21) class UserEditView(generic.UpdateView):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  22)     form_class = EditProfileForm
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400  23)     template_name = 'EditProfile.html'
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  24)     success_url = reverse_lazy('home')
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  25)     def get_object(self):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  26)         return self.request.user
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  27) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  28) class PasswordsChangeView(PasswordChangeView):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  29)     form_class = PasswordChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  30)     success_url = reverse_lazy('PasswordSuccess')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  31) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  32) # Create your views here.
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  33) def home(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  34)     return render(request, "homepage.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  35) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  36) def CreateAccount(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  37)     if request.method == "POST":
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  38)         username = request.POST.get('username')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  39)         fname = request.POST.get('fname')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  40)         lname = request.POST.get('lname')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  41)         email = request.POST.get('email')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  42)         password = request.POST.get('password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  43)         confirm_password = request.POST.get('confirm_password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  44) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  45)         if User.objects.filter(username=username):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  46)             messages.error(request, "Username already exists!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  47)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  48) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  49)         if User.objects.filter(email=email):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  50)             messages.error(request, "Email already exists!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  51)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  52)         
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  53)         if len(username)>15:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  54)             messages.error(request, "Username must be under 10 characters.")
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  55)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  56) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  57)         if password != confirm_password:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  58)             messages.error(request, "Passwords do not match.")
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  59)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  60)         if not username.isalnum():
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  61)             messages.error(request, "Username must not contain special characters.")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  62)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  63) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  64)         myuser = User.objects.create_user(username, email, password)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  65)         myuser.first_name = fname
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  66)         myuser.last_name = lname
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  67)         myuser.is_active = True
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  68)         myuser.save() 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  69) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  70)         messages.success(request, "Your Account has been successfully created.")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  72)     return render(request, "CreateAccount.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  73) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  74) def SignIn(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  75)     if request.method == "POST":
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  76)         username = request.POST.get('username')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  77)         password = request.POST.get('password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  78) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  79)         user = authenticate(username=username, password=password)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  80) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  81)         if user is not None:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  82)             login(request, user)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  83)             fname = user.first_name
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  85)             return render(request, "homepage.html", {'fname' : fname})
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  86)         else:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  87)             messages.error(request, "Credentials Are Incorrect")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  88)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  89) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  90)     return render(request, "SignIn.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  91) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  92) def SignOut(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  93)     logout(request)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  94)     messages.success(request, "Logged Out Successfully!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  95)     return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  96) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 130) def CreateCharts(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 131)     pass
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 132) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 133) def ChartHistory(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 134)     pass
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 135) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 136) def MoreInfo(request):
838cc069 (Ashirran     2022-10-25 21:48:28 -0400 137)     return render(request, "MoreInfo.html")
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 151) def password_success(request):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 152)     return render(request, 'PasswordSuccess.html',{})   
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 153) 
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400 154) def EditProfile(request):
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400 155)     return render(request, "EditProfile.html")

WorkoutApp/WorkoutApp/settings.py
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   4) from django.shortcuts import render, redirect
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   5) from django.contrib.auth.models import User
8501d430 (Ashirran     2022-10-25 19:17:51 -0400   6) from django.views import generic
8501d430 (Ashirran     2022-10-25 19:17:51 -0400   7) from django.urls import reverse_lazy
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   8) from django.contrib import messages
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   9) from django.contrib.auth import authenticate, login, logout
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  10) from django.contrib.auth.forms import UserChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  11) from telnetlib import LOGOUT, Telnet
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  12) from django import forms
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  13) from django.contrib.auth.views import PasswordChangeView, PasswordChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  15) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  16) class EditProfileForm(UserChangeForm):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  17)     class Meta(UserChangeForm.Meta):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  18)         fields = None
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  19)         exclude = ('groups','is_staff', 'is_active', 'user_permissions', 'is_superuser', 'password', 'last_login')
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  20) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  21) class UserEditView(generic.UpdateView):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  22)     form_class = EditProfileForm
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400  23)     template_name = 'EditProfile.html'
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  24)     success_url = reverse_lazy('home')
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  25)     def get_object(self):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  26)         return self.request.user
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  27) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  28) class PasswordsChangeView(PasswordChangeView):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  29)     form_class = PasswordChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  30)     success_url = reverse_lazy('PasswordSuccess')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  31) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  32) # Create your views here.
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  33) def home(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  34)     return render(request, "homepage.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  35) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  36) def CreateAccount(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  37)     if request.method == "POST":
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  38)         username = request.POST.get('username')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  39)         fname = request.POST.get('fname')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  40)         lname = request.POST.get('lname')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  41)         email = request.POST.get('email')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  42)         password = request.POST.get('password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  43)         confirm_password = request.POST.get('confirm_password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  44) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  45)         if User.objects.filter(username=username):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  46)             messages.error(request, "Username already exists!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  47)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  48) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  49)         if User.objects.filter(email=email):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  50)             messages.error(request, "Email already exists!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  51)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  52)         
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  53)         if len(username)>15:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  54)             messages.error(request, "Username must be under 10 characters.")
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  55)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  56) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  57)         if password != confirm_password:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  58)             messages.error(request, "Passwords do not match.")
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  59)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  60)         if not username.isalnum():
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  61)             messages.error(request, "Username must not contain special characters.")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  62)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  63) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  64)         myuser = User.objects.create_user(username, email, password)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  65)         myuser.first_name = fname
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  66)         myuser.last_name = lname
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  67)         myuser.is_active = True
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  68)         myuser.save() 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  69) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  70)         messages.success(request, "Your Account has been successfully created.")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  72)     return render(request, "CreateAccount.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  73) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  74) def SignIn(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  75)     if request.method == "POST":
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  76)         username = request.POST.get('username')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  77)         password = request.POST.get('password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  78) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  79)         user = authenticate(username=username, password=password)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  80) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  81)         if user is not None:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  82)             login(request, user)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  83)             fname = user.first_name
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  85)             return render(request, "homepage.html", {'fname' : fname})
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  86)         else:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  87)             messages.error(request, "Credentials Are Incorrect")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  88)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  89) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  90)     return render(request, "SignIn.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  91) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  92) def SignOut(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  93)     logout(request)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  94)     messages.success(request, "Logged Out Successfully!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  95)     return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  96) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 130) def CreateCharts(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 131)     pass
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 132) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 133) def ChartHistory(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 134)     pass
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 135) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 136) def MoreInfo(request):
838cc069 (Ashirran     2022-10-25 21:48:28 -0400 137)     return render(request, "MoreInfo.html")
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 151) def password_success(request):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 152)     return render(request, 'PasswordSuccess.html',{})   
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 153) 
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400 154) def EditProfile(request):
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400 155)     return render(request, "EditProfile.html")

WorkoutApp/Templates/EditProfile.html
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   4) from django.shortcuts import render, redirect
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   5) from django.contrib.auth.models import User
8501d430 (Ashirran     2022-10-25 19:17:51 -0400   6) from django.views import generic
8501d430 (Ashirran     2022-10-25 19:17:51 -0400   7) from django.urls import reverse_lazy
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   8) from django.contrib import messages
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400   9) from django.contrib.auth import authenticate, login, logout
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  10) from django.contrib.auth.forms import UserChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  11) from telnetlib import LOGOUT, Telnet
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  12) from django import forms
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  13) from django.contrib.auth.views import PasswordChangeView, PasswordChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  15) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  16) class EditProfileForm(UserChangeForm):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  17)     class Meta(UserChangeForm.Meta):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  18)         fields = None
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  19)         exclude = ('groups','is_staff', 'is_active', 'user_permissions', 'is_superuser', 'password', 'last_login')
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  20) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  21) class UserEditView(generic.UpdateView):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  22)     form_class = EditProfileForm
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400  23)     template_name = 'EditProfile.html'
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  24)     success_url = reverse_lazy('home')
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  25)     def get_object(self):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  26)         return self.request.user
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  27) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  28) class PasswordsChangeView(PasswordChangeView):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  29)     form_class = PasswordChangeForm
8501d430 (Ashirran     2022-10-25 19:17:51 -0400  30)     success_url = reverse_lazy('PasswordSuccess')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  31) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  32) # Create your views here.
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  33) def home(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  34)     return render(request, "homepage.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  35) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  36) def CreateAccount(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  37)     if request.method == "POST":
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  38)         username = request.POST.get('username')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  39)         fname = request.POST.get('fname')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  40)         lname = request.POST.get('lname')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  41)         email = request.POST.get('email')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  42)         password = request.POST.get('password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  43)         confirm_password = request.POST.get('confirm_password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  44) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  45)         if User.objects.filter(username=username):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  46)             messages.error(request, "Username already exists!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  47)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  48) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  49)         if User.objects.filter(email=email):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  50)             messages.error(request, "Email already exists!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  51)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  52)         
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  53)         if len(username)>15:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  54)             messages.error(request, "Username must be under 10 characters.")
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  55)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  56) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  57)         if password != confirm_password:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  58)             messages.error(request, "Passwords do not match.")
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  59)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  60)         if not username.isalnum():
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  61)             messages.error(request, "Username must not contain special characters.")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  62)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  63) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  64)         myuser = User.objects.create_user(username, email, password)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  65)         myuser.first_name = fname
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  66)         myuser.last_name = lname
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  67)         myuser.is_active = True
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  68)         myuser.save() 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  69) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  70)         messages.success(request, "Your Account has been successfully created.")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  72)     return render(request, "CreateAccount.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  73) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  74) def SignIn(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  75)     if request.method == "POST":
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  76)         username = request.POST.get('username')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  77)         password = request.POST.get('password')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  78) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  79)         user = authenticate(username=username, password=password)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  80) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  81)         if user is not None:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  82)             login(request, user)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  83)             fname = user.first_name
02fa0187 (Ashirran     2022-10-11 20:40:35 -0400  85)             return render(request, "homepage.html", {'fname' : fname})
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  86)         else:
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  87)             messages.error(request, "Credentials Are Incorrect")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  88)             return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  89) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  90)     return render(request, "SignIn.html")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  91) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  92) def SignOut(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  93)     logout(request)
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  94)     messages.success(request, "Logged Out Successfully!")
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  95)     return redirect('home')
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400  96) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 130) def CreateCharts(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 131)     pass
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 132) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 133) def ChartHistory(request):
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 134)     pass
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 135) 
6979b3eb (Ashirran     2022-10-09 19:34:39 -0400 136) def MoreInfo(request):
838cc069 (Ashirran     2022-10-25 21:48:28 -0400 137)     return render(request, "MoreInfo.html")f440fed7 (Jacob Howard 2022-10-12 15:40:46 -0400 138) 
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 151) def password_success(request):
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 152)     return render(request, 'PasswordSuccess.html',{})   
8501d430 (Ashirran     2022-10-25 19:17:51 -0400 153) 
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400 154) def EditProfile(request):
a5f923ef (Ashirran     2022-10-26 13:44:59 -0400 155)     return render(request, "EditProfile.html")

